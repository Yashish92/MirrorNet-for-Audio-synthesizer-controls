'''
I am trying to understand why the MirrorNet_rahil_AudSpec.py script is giving me NANs. 
Breaking it into two possible errors- a) the AudSpec data is buggy and incorrect. b) There is an issue with the network. 

This script analyses possibility a- Buggy data generated by the data_process.py script. 

I will try to plot the AudSpecs, fo, sp, ap for a few samples and then do the same for the data generated by 
the random_generation.py script too
'''
#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
import argparse

import matplotlib

SERVER = True # This variable enable or disable matplotlib, set it to true when you use the server!
if SERVER:
    matplotlib.use('Agg')


import sys
import os
import numpy as np
import h5py
import time
import subprocess
import logging
#from IPython.display import Audio
import pyworld as pw
import librosa
from datetime import date
import matplotlib.pyplot as plt
import pickle
import datetime
from scipy.io.wavfile import write
from random_generation import get_f0, get_ap
import inspect
import nsltools as nsl 
import scipy.io.wavfile
import scipy.io as scio
import scipy.optimize as so
import soundfile as sf
import matplotlib.image as image

# path='./data/data_STFTSpectrograms/female_voice.data'
# path='./data/train_random.data'
# path='./data/train.data'
path='./data/initialization_fraction_male_speakers_random_50.data'
# print ('TODAY!')
# path='./data/female_voice_random.data'
# path='./data/female_voice.data'
# path='./data/WSJ_00F_train_random.data'
# path='./data/test_set_287.data'
# path='./data/train_set_male_speakers_augmented_random.data'

h5pyLoader = h5py.File(path, 'r')
wav = h5pyLoader['speaker']
spec = h5pyLoader['spec513']
specWorld = h5pyLoader['spec513_pw']
hidden = h5pyLoader['hidden']
print (path, 'path')
print (wav.shape,  'wav shape')
print (spec.shape, 'spec')
print (specWorld.shape, 'specWorld')
print (hidden.shape, 'hidden')
fs=16000
speaker_index=0
#We dont care about Spec. We care about SpecWorld! 

for i in range(wav.shape[0]):
	speaker_spec=specWorld[i,:,:]
	# print (spec[i, :, :].shape)
	spec_pre_world=spec[i,:,:]
	image.imsave('./debug/Speaker_spec%d.png' %(i), speaker_spec, cmap='jet', origin='lower')
	# image.imsave('./debug/Speaker_spec_pre_world%d.png' %(i), spec_pre_world, cmap='jet', origin='lower')
	scipy.io.wavfile.write('./debug/Speaker_wav%d.wav' %(i),fs,wav[i,:])

f0=hidden[speaker_index, 0, :]
sp=hidden[speaker_index, 1:514, :]
ap=hidden[speaker_index, 514:, :]

plt.figure()
plt.imshow(sp,  cmap='jet', origin='lower')
plt.colorbar()
plt.savefig('./debug/SP_0.png')

plt.figure()
# f0.shape
plt.plot(f0)
# # plt.colorbar()
plt.savefig('./debug/f0.png')

plt.figure()
image.imsave('./debug/AP_0.png', (ap), origin='lower')

plt.figure()
plt.imshow(np.exp(sp),  cmap='jet', origin='lower')
plt.colorbar()
plt.savefig('./debug/exp(SP_0).png')

# y_ideal = pw.synthesize(f0[0,:], (np.ascontiguousarray(sp.T)), np.ascontiguousarray(ap.T), 16000, frame_period=8.0)
# y_ideal = y_ideal/np.sqrt(np.sum(y_ideal**2)) 
# scipy.io.wavfile.write('y_world_random' ,16000,y_ideal)


# wav = y_ideal.copy().astype('float64')
# wav = wav/np.sqrt(np.sum(wav**2))  # power normalization
# # print (spec[0, :, :].shape)
# wav=nsl.unitseq(wav)
# f0, sp, ap = pw.wav2world(wav, 16000, frame_period=8.0) 
# plt.figure()
# plt.imshow(sp.T,  cmap='jet', origin='lower')
# plt.colorbar()

# plt.savefig('./debug/SP_0_recon.png')
# plt.figure()
# image.imsave('./debug/AP_0_recon.png', (ap), origin='lower')



















